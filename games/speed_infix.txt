Name: Speed
Turn-based: no

Number of players: 2
Player hand size: 5
Player collections: 3
p0:
    name: Player1
p1:
    name: Player2

Number of piles: 6
pile0:
    name: draw1
    facedown: yes
    size: 15
    owner: Player1
pile1:
    name: draw2
    facedown: yes
    size: 15
    owner: Player2
pile2:
    name: replace1
    facedown: yes
    size: 5
    owner: all
pile3:
    name: replace2
    facedown: yes
    size: 5
    owner: all
pile4:
    name: discard1
    facedown: no
    size: 1
    owner: all
pile5:
    name: discard2
    facedown: no
    size: 1
    owner: all

Number of rules: 10
rule0:
    name: valuesWithinOne
    expr: val1 is val2 + 1 or val1 is val2 - 1
    where: None

rule1:
    name: valuesWrapAround
    expr: (val1 is 1 and val2 is 13) or (val1 is 13 and val2 is 1)
    where: None

rule2:
    name: validDiscard
    expr: valuesWithinOne or valuesWrapAround
    where: val1 = card.value, val2 = pile.top_card.value

rule4:
    name: canDiscard
    expr: any validDiscard
    where: card <- player.hand.cards, pile <- piles

rule3:
    name: validDraw
    expr: (draw.size > 0) and (hand.size < 5)
    where: None

rule5:
    name: canDraw
    expr: validDraw
    where: draw = player.draw, hand = player.hand

rule4:
    name: someoneCanPlay
    expr: any validDiscard
    where: player <- players

rule5:
    name: noneCanPlay
    expr: not someoneCanPlay
    where: None

rule6:
    name: replacePilesSameSize
    expr: replace1.size = replace2.size
    where: None

rule7:
    name: validReplacement
    expr: noneCanPlay or (not replacePilesSameSize)
    where: None

Number of moves: 8
move0:
    where: all
    from: Player1.hand
    to: discard1
    trigger: q
    how: validDiscard
move1:
    where: all
    from: Player1's hand
    to: discard2
    trigger: w
    how: validDiscard
move2:
    where: top
    from: draw1
    to: Player1's hand
    trigger: e
    how: validDraw
move3:
    where: all
    from: Player2's hand
    to: discard1
    trigger: i
    how: validDiscard
move4:
    where: all
    from: Player2's hand
    to: discard2
    trigger: o
    how: validDiscard
move5:
    where: top
    from: draw2
    to: Player2's hand
    trigger: p
    how: validDraw
move6:
    where: bottom
    from: replace1
    to: discard1
    trigger: b
    how: validReplacement
move7:
    where: bottom
    from: replace2
    to: discard2
    trigger: b
    how: validReplacement

Number of events: 1
event0:
    trigger: replace1.size = 0
    action: (replace1.replenish discard1 5) (replace2.replenish discard2 5)

Win condition: (Player1.hand.size = 0) or (Player2.hand.size = 0)
